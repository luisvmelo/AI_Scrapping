#!/usr/bin/env python3
"""
Teste espec√≠fico para verificar a extra√ß√£o de pre√ßos dos scrapers
Testa apenas 1-2 ferramentas de cada scraper para verificar se o pricing funciona
"""

def test_pricing_extraction():
    """Testa a extra√ß√£o de pre√ßos de forma r√°pida"""
    print("üîç TESTE DE EXTRA√á√ÉO DE PRE√áOS")
    print("="*50)
    
    try:
        # Testa apenas o Futurepedia (mais r√°pido e confi√°vel)
        print("\nüìä Testando Futurepedia (amostra pequena)...")
        from scrapers.futurepedia import FuturepediaScraper
        
        scraper = FuturepediaScraper()
        
        # Testa apenas uma p√°gina pequena
        response = scraper.get_page("https://www.futurepedia.io/ai-tools/business")
        if response:
            from bs4 import BeautifulSoup
            soup = BeautifulSoup(response.text, 'html.parser')
            
            # Pega apenas os primeiros 3 links para teste r√°pido
            tool_links = soup.select('a[href*="/tool/"]')[:3]
            
            pricing_examples = []
            for i, link in enumerate(tool_links):
                try:
                    tool = scraper._parse_tool_card(link, i, "business")
                    if tool:
                        pricing_examples.append({
                            'name': tool.name,
                            'price': tool.price,
                            'description': tool.description[:60] + "..."
                        })
                except:
                    continue
            
            print(f"‚úÖ Futurepedia: {len(pricing_examples)} ferramentas testadas")
            for example in pricing_examples:
                print(f"   ‚Ä¢ {example['name']} - Pre√ßo: {example['price']}")
                print(f"     {example['description']}")
            
            # Verifica se conseguiu extrair pre√ßos espec√≠ficos
            specific_prices = [ex for ex in pricing_examples if ex['price'] not in ['Unknown', 'Paid', 'Free']]
            print(f"\nüí∞ Pre√ßos espec√≠ficos extra√≠dos: {len(specific_prices)}/{len(pricing_examples)}")
            
            if specific_prices:
                print("‚úÖ Extra√ß√£o de pre√ßos funcionando!")
                for sp in specific_prices:
                    print(f"   üéØ {sp['name']}: {sp['price']}")
            else:
                print("‚ö†Ô∏è Apenas pre√ßos gen√©ricos extra√≠dos")
        
        else:
            print("‚ùå N√£o foi poss√≠vel acessar o Futurepedia")
    
    except Exception as e:
        print(f"‚ùå Erro no teste: {e}")

if __name__ == "__main__":
    test_pricing_extraction()